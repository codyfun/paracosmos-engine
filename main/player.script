local walk_speed = 128
local anim_dtmax = 0.5
local RACE_COLORS = {
	[hash"human"] = vmath.vector4(.0, .6, .6, 1),
	[hash"dog"] = vmath.vector4(.6, .4, .0, 1),
	[hash"rabbit"] = vmath.vector4(.7, .7, .2, 1),
}

go.property("controllable", false)
go.property("team", 0)
go.property("race", hash"human")

function init(self)
	msg.post("art#sprite", "play_animation", { id = self.race })
	go.set("bg#sprite", "tint", (self.team == 0) and vmath.vector4(0,1,0,0.4) or vmath.vector4(1,0.5,0,0.4))
	go.set("hpbar#sprite", "tint", vmath.vector4(1,0,0,1))
	go.set("art#sprite", "tint", RACE_COLORS[self.race])
	self.dir = vmath.vector3()
	self.anchor = go.get(".", "position")
	self.anim_dt = 0
end

function update(self, dt)
	if vmath.vector3() ~= self.dir then
		local new_pos = go.get_position() + self.dir * walk_speed * dt
		if vmath.length_sqr(new_pos - self.anchor) > 160*160 then
			new_pos = self.anchor + vmath.normalize(new_pos - self.anchor) * 160
		end
		go.set_position(new_pos)
		self.dir = vmath.vector3()
		self.anim_dt = self.anim_dt + dt
	end
	self.anim_dt = self.anim_dt + dt
	if self.anim_dt >= anim_dtmax then
		self.anim_dt = self.anim_dt - anim_dtmax
		local scale = go.get("art", "scale")
		if scale.y == 1 then
			scale.y = 0.95
		else
			scale.y = 1
		end
		go.set("art", "scale", scale)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash"start_turn" then
		msg.post(".", "acquire_input_focus")
		self.has_turn = true
		msg.post(sender, "turn_info", {pos = go.get(".", "position"), moverange=384})
	elseif message_id == hash"contact_point_response" and self.has_turn then
		go.set_position(go.get_position() + message.normal * message.distance)
	end
end

function on_input(self, action_id, action)
	if self.controllable then
		if action_id == hash"up" then
			self.dir.y = self.dir.y + 1
		elseif action_id == hash"down" then
			self.dir.y = self.dir.y - 1
		elseif action_id == hash"left" then
			self.dir.x = self.dir.x - 1
		elseif action_id == hash"right" then
			self.dir.x = self.dir.x + 1
		end
	end
end
